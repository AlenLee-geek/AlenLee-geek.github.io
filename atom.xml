<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AlenLee&#39;s blogs</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://AlenLee-geek.github.io.git/"/>
  <updated>2018-04-11T03:34:24.989Z</updated>
  <id>https://AlenLee-geek.github.io.git/</id>
  
  <author>
    <name>AlenLee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Array</title>
    <link href="https://AlenLee-geek.github.io.git/2018/04/11/Array/"/>
    <id>https://AlenLee-geek.github.io.git/2018/04/11/Array/</id>
    <published>2018-04-11T02:19:47.000Z</published>
    <updated>2018-04-11T03:34:24.989Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h4 id="在脚本语言里很常见的一个特性是，数组中的元素不必是通哟中数据类型，这一点和衡多编程语言不同"><a href="#在脚本语言里很常见的一个特性是，数组中的元素不必是通哟中数据类型，这一点和衡多编程语言不同" class="headerlink" title="在脚本语言里很常见的一个特性是，数组中的元素不必是通哟中数据类型，这一点和衡多编程语言不同"></a>在脚本语言里很常见的一个特性是，数组中的元素不必是通哟中数据类型，这一点和衡多编程语言不同</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var objects = [1,&apos;alen&apos;,true,null];</span><br></pre></td></tr></table></figure></blockquote><blockquote><h4 id="当把一个数组赋给另外一个数组时，只是为被赋值的数组增加了一个新的引用，当你通过原引用修改了数组的值，"><a href="#当把一个数组赋给另外一个数组时，只是为被赋值的数组增加了一个新的引用，当你通过原引用修改了数组的值，" class="headerlink" title="当把一个数组赋给另外一个数组时，只是为被赋值的数组增加了一个新的引用，当你通过原引用修改了数组的值，"></a>当把一个数组赋给另外一个数组时，只是为被赋值的数组增加了一个新的引用，当你通过原引用修改了数组的值，</h4><h4 id="另外一个引用也会感知到这个变化，"><a href="#另外一个引用也会感知到这个变化，" class="headerlink" title="另外一个引用也会感知到这个变化，"></a>另外一个引用也会感知到这个变化，</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var nums = [];</span><br><span class="line">for(var i = 0;i &lt; 10;i++)&#123;</span><br><span class="line">  nums[i] =i+1;</span><br><span class="line">&#125;</span><br><span class="line">var samenums = nums;</span><br></pre></td></tr></table></figure></blockquote><blockquote><h4 id="这种行为被称为浅复制，新数组依然指向原来的数组。"><a href="#这种行为被称为浅复制，新数组依然指向原来的数组。" class="headerlink" title="这种行为被称为浅复制，新数组依然指向原来的数组。"></a>这种行为被称为浅复制，新数组依然指向原来的数组。</h4><h4 id="使用深复制，将原来数组的每一个元素都复制一份到新数组中，可以写一个深复制函数来做这件事。"><a href="#使用深复制，将原来数组的每一个元素都复制一份到新数组中，可以写一个深复制函数来做这件事。" class="headerlink" title="使用深复制，将原来数组的每一个元素都复制一份到新数组中，可以写一个深复制函数来做这件事。"></a>使用深复制，将原来数组的每一个元素都复制一份到新数组中，可以写一个深复制函数来做这件事。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function copy(arr1,arr2)&#123;</span><br><span class="line">  for(var i = 0; i &lt; arr1.length; ++i)&#123;</span><br><span class="line">    arr2[i] = arr1[i];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><blockquote><h4 id="查找元素indexof"><a href="#查找元素indexof" class="headerlink" title="查找元素indexof(),"></a>查找元素indexof(),</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var names = [&apos;alen&apos;,&apos;jhon&apos;,&apos;Clayton&apos;];</span><br><span class="line">putstr(&apos;Enter a name to search for: &apos;);</span><br><span class="line">var name = readline();</span><br><span class="line">var position = name.indexof(name);</span><br><span class="line">if( position &gt;= 0)&#123;</span><br><span class="line">  print(&apos;Found&apos; + name + &apos; at position &apos;+ position);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">  print(name + &apos;not found in array.&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><blockquote><h4 id="迭代器方法"><a href="#迭代器方法" class="headerlink" title="迭代器方法"></a>迭代器方法</h4><p>最后一组方法是迭代器方法，这些方法对数组中的每个元素一个函数，可以返回一个值，一组值或者一个新数组<br>不生成新数组的迭代器方法<br>forEach(),该方法接受一个函数作为参数，对数组中的每个元素使用该函数、<br>every(),该方法接受一个返回值为布尔类型的函数，对数组中的每一个袁术使用该函数，如果对于所有的元素，该该函数均返回true.<br>some(),方法接受一个返回值为布尔类型的函数，只要有一个元素使得该函数返回true<br>reduce()方法接受一个函数，返回一个值，该方法会从一个累加值开始，不断对累加值和数组中的后续</p><h4 id="生成新数组的迭代器方法"><a href="#生成新数组的迭代器方法" class="headerlink" title="生成新数组的迭代器方法"></a>生成新数组的迭代器方法</h4><p>有两个迭代器方法可以生成新数组；map()和filter()</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h4 id=&quot;在脚本语言里很常见的一个特性是，数组中的元素不必是通哟中数据类型，这一点和衡多编程语言不同&quot;&gt;&lt;a href=&quot;#在脚本语言里很常见的一个特性是，数组中的元素不必是通哟中数据类型，这一点和衡多编程语言不同&quot; class=&quot;headerli
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>立即执行函数</title>
    <link href="https://AlenLee-geek.github.io.git/2018/04/10/%E7%AB%8B%E5%8D%B3%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0/"/>
    <id>https://AlenLee-geek.github.io.git/2018/04/10/立即执行函数/</id>
    <published>2018-04-10T06:55:15.795Z</published>
    <updated>2018-04-10T08:57:49.678Z</updated>
    
    <content type="html"><![CDATA[<h3 id="javascript-立即执行函数"><a href="#javascript-立即执行函数" class="headerlink" title="javascript 立即执行函数"></a>javascript 立即执行函数</h3><blockquote><p>为了处于隔离的作用域，任何一个第三方库都存在大量的变量和函数，为避免变量污染（命名冲突），使用立即执行函数。<br>1.什么是立即执行函数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">  function test()&#123;//函数声明</span><br><span class="line">    console.log(&apos;test&apos;);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   var test = function()&#123;//函数表达式</span><br><span class="line">    console.log(&apos;test&apos;);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> function()&#123;</span><br><span class="line">  console.log(&apos;test&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="要想立即执行函数做到立即执行，"><a href="#要想立即执行函数做到立即执行，" class="headerlink" title="要想立即执行函数做到立即执行，"></a>要想立即执行函数做到立即执行，</h3><p>1.一是函数体后面要小括号。<br>2.二函数体必须是函数表达式而不能函数声明。<br>3.除了()运算符之外，！，+，-，=等运算符都能够立即执行的作用。这些运算符的作用就是将函数或函数声明转换为函数表达式。</p><h3 id="使用立即执行函数的好处"><a href="#使用立即执行函数的好处" class="headerlink" title="使用立即执行函数的好处"></a>使用立即执行函数的好处</h3><p>1.防止变量名称冲突。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;javascript-立即执行函数&quot;&gt;&lt;a href=&quot;#javascript-立即执行函数&quot; class=&quot;headerlink&quot; title=&quot;javascript 立即执行函数&quot;&gt;&lt;/a&gt;javascript 立即执行函数&lt;/h3&gt;&lt;blockquote&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://AlenLee-geek.github.io.git/2018/03/31/hello-world/"/>
    <id>https://AlenLee-geek.github.io.git/2018/03/31/hello-world/</id>
    <published>2018-03-31T06:16:53.179Z</published>
    <updated>2018-03-31T06:17:17.483Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
